# Build stage
FROM node:22-alpine AS base

FROM base AS builder
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache libc6-compat

# Copy package files
COPY . .
RUN rm -rf ./**/generated

# Install pnpm and dependencies with --shamefully-hoist to ensure TypeScript is accessible
RUN corepack enable && corepack prepare pnpm@latest --activate
RUN pnpm install --frozen-lockfile

# Build the server
RUN pnpm turbo -F server build && pnpm prune --prod

# Production stage
# FROM gcr.io/distroless/nodejs22-debian12 AS runner
FROM node:22-alpine AS runner

WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 hono

# Copy built files from builder
COPY --from=builder --chown=hono:nodejs /app/node_modules /app/node_modules
COPY --from=builder --chown=hono:nodejs /app/apps/server/node_modules /app/apps/server/node_modules
COPY --from=builder --chown=hono:nodejs /app/apps/server/dist /app/apps/server/dist
COPY --from=builder --chown=hono:nodejs /app/apps/server/package.json /app/apps/server/package.json
COPY --from=builder --chown=hono:nodejs /app/apps/server/prisma /app/apps/server/prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000

USER hono
EXPOSE 3000

# Run the application
CMD ["node", "/app/apps/server/dist/src/index.js"]
